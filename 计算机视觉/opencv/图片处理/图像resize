import cv2
img = cv2.imread('800.jpg')
img_scaled = cv2.resize(img, None, fx=1.2, fy=1.2, interpolation=cv2.INTER_LINEAR)
cv2.imshow('Scaling - Linear Interpolation', img_scaled)
img_scaled = cv2.resize(img, None, fx=1.2, fy=1.2, interpolation=cv2.INTER_CUBIC)
cv2.imshow('Scaling - Cubic Interpolation',  img_scaled)
img_scaled = cv2.resize(img,(450,400),interpolation=cv2.INTER_AREA)
cv2.imshow('Scaling - Skewed  size', img_scaled)
cv2.waitKey()


说明：
缩放变换cv2.resize()
非关键字参数组有2个：src,dsize，分别是源图像与缩放后图像的尺寸
关键字参数为dst,fx,fy,interpolation
dst为缩放后的图像，fx,fy为图像x,y方向的缩放比例，
interplolation为缩放时的插值方式，有三种插值方式：
cv2.INTER_AREA 　　# 使用象素关系重采样。当图像缩小时候，该方法可以避免波纹出现。当图像放大时，类似于 CV_INTER_NN 方法　　　　
cv2.INTER_CUBIC　　# 立方插值
cv2.INTER_LINEAR  # 双线形插值　
cv2.INTER_NN      # 最近邻插值

If we are enlarging an image, it's preferable to use linear or cubic interpolation. 
If we are shrinking an image, it's preferable to use area-based interpolation.
Cubic interpolation is computationally more complex, and hence slower than linear interpolation. 
However, the quality of the resulting image will be higher.
