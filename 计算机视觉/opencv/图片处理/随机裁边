一、numpy实现图像随机裁剪
源代码如下：

import matplotlib.pyplot as plt
import numpy as np
import random
from PIL import Image 

image_path = "/home/xsr-ai/datasets/butterfly.jpg"

def random_crop(image, crop_shape, padding=None):
    oshape = np.shape(image)

    if padding:
        oshape = (oshape[0] + 2 * padding, oshape[1] + 2 * padding)

        npad = ((padding, padding), (padding, padding), (0, 0))

        image_pad = np.lib.pad(image, pad_width=npad, mode='constant', constant_values=0)
        nh = random.randint(0, oshape[0] - crop_shape[0])
        nw = random.randint(0, oshape[1] - crop_shape[1])
        image_crop = image_pad[nh:nh + crop_shape[0], nw:nw + crop_shape[1]]

        return image_crop
    else:
        print("WARNING!!! nothing to do!!!")
        return image
    
if __name__ == "__main__":
    image_src = Image.open(image_path)
    crop_width = image_src.size[0] - 10
    crop_height = image_src.size[1] - 10
    image_dst_crop = random_crop(image_src, [crop_width, crop_height], padding=10)
    
    plt.figure()
    plt.subplot(221)
    plt.imshow(image_src)
    plt.title("oringin image")
    plt.subplot(222)
    plt.imshow(image_dst_crop)
    plt.title("crop image")
    plt.show()
    
    二、opencv实现图像随机裁剪
源代码如下：

import numpy as np
import random
import cv2

image_path = "/home/xsr-ai/datasets/butterfly.jpg"

def random_crop(image, crop_shape, padding=None):
    img_h = image.shape[0]
    img_w = image.shape[1]
    img_d = image.shape[2]

    if padding:
        oshape_h = img_h + 2 * padding
        oshape_w = img_w + 2 * padding
        img_pad = np.zeros([oshape_h, oshape_w, img_d], np.uint8)
        img_pad[padding:padding+img_h, padding:padding+img_w, 0:img_d] = image
  
        nh = random.randint(0, oshape_h - crop_shape[0])
        nw = random.randint(0, oshape_w - crop_shape[1])
        image_crop = img_pad[nh:nh + crop_shape[0], nw:nw + crop_shape[1]]

        return image_crop
    else:
        print("WARNING!!! nothing to do!!!")
        return image
    
if __name__ == "__main__":
    image_src = cv2.imread(image_path)
    crop_width = image_src.shape[0] - 24
    crop_height = image_src.shape[1] - 24
    image_dst_crop = random_crop(image_src, [crop_width, crop_height], padding=10)
    
    cv2.imshow("oringin image", image_src)
    cv2.imshow("crop image", image_dst_crop)
    cv2.waitKey(0)
    cv2.destroyAllWindows()
    
    三、PIL实现图像随机裁剪
源代码如下：

import matplotlib.pyplot as plt
from PIL import Image
import random

image_path = "/home/xsr-ai/datasets/butterfly.jpg"

def random_crop(image, crop_shape, padding=None):
    oshape = image.size

    if padding:
        oshape_pad = (oshape[0] + 2 * padding, oshape[1] + 2 * padding)
        img_pad = Image.new("RGB", (oshape_pad[0], oshape_pad[1]))
        img_pad.paste(image, (padding, padding))
        
        nh = random.randint(0, oshape_pad[0] - crop_shape[0])
        nw = random.randint(0, oshape_pad[1] - crop_shape[1])
        image_crop = img_pad.crop((nh, nw, nh+crop_shape[0], nw+crop_shape[1]))

        return image_crop
    else:
        print("WARNING!!! nothing to do!!!")
        return image
    
if __name__ == "__main__":
    image_src = Image.open(image_path)
    crop_width = image_src.size[0] - 24
    crop_height = image_src.size[1] - 24
    image_dst_crop = random_crop(image_src, [crop_width, crop_height], padding=10)
    
    plt.figure()
    plt.subplot(221)
    plt.imshow(image_src)
    plt.title("oringin image")
    plt.subplot(222)
    plt.imshow(image_dst_crop)
    plt.title("crop image")
    plt.show()
    
    四、tensorflow实现图像随机裁剪方法一
源代码如下：

import matplotlib.pyplot as plt
import tensorflow as tf
import random

image_path = "/home/xsr-ai/datasets/butterfly.jpg"

def random_crop(image, crop_shape, padding=None):
    oshape = crop_shape

    if padding:
        oshape_pad = (oshape[0] + 2 * padding, oshape[1] + 2 * padding)
        img_pad = tf.image.pad_to_bounding_box(image, padding, padding, oshape_pad[0], oshape_pad[1])
        
        nh = random.randint(0, oshape_pad[0] - crop_shape[0])
        nw = random.randint(0, oshape_pad[1] - crop_shape[1])

        image_crop = tf.image.crop_to_bounding_box(img_pad, nh, nw, crop_shape[0], crop_shape[1])

        return image_crop
    else:
        print("WARNING!!! nothing to do!!!")
        return image
    
if __name__ == "__main__":
    image = tf.read_file(image_path) # read picture from gving path.
    image_src = tf.image.decode_jpeg(image)
    image_src = tf.reshape(image_src, shape=[224,224,3])
    crop_shape = [224,224,3]

    image_dst_crop = random_crop(image_src, crop_shape, padding=10)
    
    with tf.Session() as sess:
        image_src = sess.run(image_src)
        image_dst_crop = sess.run(image_dst_crop)
    
    plt.figure()
    plt.subplot(221)
    plt.imshow(image_src)
    plt.title("oringin image")
    plt.subplot(222)
    plt.imshow(image_dst_crop)
    plt.title("crop image")
    plt.show()
    
    五、tensorflow实现图像随机裁剪方法二
源代码如下：

import matplotlib.pyplot as plt
import tensorflow as tf
import random

image_path = "/home/xsr-ai/datasets/butterfly.jpg"

def random_crop(image, crop_shape, padding=None):
    oshape = crop_shape

    if padding:
        oshape_pad = (oshape[0] + 2 * padding, oshape[1] + 2 * padding)
        npad = [[padding,padding],[padding,padding],[0,0]]
        
        img_pad = tf.pad(image, paddings=npad, mode='constant')
        
        nh = random.randint(0, oshape_pad[0] - crop_shape[0])
        nw = random.randint(0, oshape_pad[1] - crop_shape[1])

        image_crop = tf.strided_slice(img_pad, [nh, nw, 0], [nh + oshape[0], nw + oshape[1], 3], [1, 1, 1])

        return image_crop
    else:
        print("WARNING!!! nothing to do!!!")
        return image
    
if __name__ == "__main__":
    image = tf.read_file(image_path) # read picture from gving path.
    image_src = tf.image.decode_jpeg(image)
    image_src = tf.reshape(image_src, shape=[224,224,3])
    crop_shape = [224,224,3]

    image_dst_crop = random_crop(image_src, crop_shape, padding=10)
    
    with tf.Session() as sess:
        image_src = sess.run(image_src)
        image_dst_crop = sess.run(image_dst_crop)
    
    plt.figure()
    plt.subplot(221)
    plt.imshow(image_src)
    plt.title("oringin image")
    plt.subplot(222)
    plt.imshow(image_dst_crop)
    plt.title("crop image")
    plt.show()
    
    详情：
    https://zhuanlan.zhihu.com/p/32713815
