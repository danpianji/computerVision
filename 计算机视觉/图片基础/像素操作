法一： 像素点
import cv2
import numpy as np

img = cv2.imread('800.jpg')
px = img[100,100]
print px

# 输出
[133 139  80]

# access only blue pixel
blue = img[100,100,0]
print blue

# 输出
133

# access RED value
red = img.item(10, 10, 2)
print red

# 输出
10

# modify pixel value 
img[100,100] = [255, 255, 255]
print img[100, 100]

# 输出
Out[24]: array([255, 255, 255], dtype=uint8)

# modify RED value
img.itemset((10, 10, 2), 100)
print (img.item(10, 10, 2))

# 输出
100

# 尺寸
In [20]: img.shape
Out[20]: (3840, 5760, 3)   #高度,宽度,色彩通道数

# 像素点的总数
In [18]: img.size
Out[18]: 66355200

# 图片的数据类型
In [19]: img.dtype
Out[19]: dtype('uint8')

'''
[47 60 46]
47
251
[255 255 255]
100
'''

法二：区域像素修改
from __future__ import print_function
import argparse
import cv2

ap = argparse.ArgumentParser()
ap.add_argument("-i", "--image", required=True,
        help="Path to the image")
args = vars(ap.parse_args())

image = cv2.imread(args["image"])
cv2.imshow("Original", image)

(b, g, r) = image[0, 0]
print("Pixel at (0, 0) - Red: {}, Green: {}, Blue:{}".format(r, g, b))
image[0, 0] = (0, 0, 255)
(b, g, r) = image[0, 0]
print("Pixel at (0, 0) - Red: {}, Green: {}, Blue:{}".format(r, g, b))

corner = image[0:100, 0:100]
cv2.imshow("Corner", corner)

image[0:100, 0:100] = (0, 255, 0)

cv2.imshow("Updated", image)
cv2.waitKey(0)
